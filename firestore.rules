rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Events collection - users can only access their own events
    match /events/{eventId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Reminders collection - users can only access their own reminders
    match /reminders/{reminderId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Conversations collection - users can only access their own conversations
    match /conversations/{conversationId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Memories collection - users can only access their own memories
    match /memories/{memoryId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // User profiles collection - users can only access their own profile
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
